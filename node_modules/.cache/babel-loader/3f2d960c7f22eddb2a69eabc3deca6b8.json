{"remainingRequest":"/Users/jessehen/PhpstormProjects/lifecoach-frontend/node_modules/babel-loader/lib/index.js!/Users/jessehen/PhpstormProjects/lifecoach-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/jessehen/PhpstormProjects/lifecoach-frontend/src/store/modules/auth.js","dependencies":[{"path":"/Users/jessehen/PhpstormProjects/lifecoach-frontend/src/store/modules/auth.js","mtime":1577657095462},{"path":"/Users/jessehen/PhpstormProjects/lifecoach-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jessehen/PhpstormProjects/lifecoach-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jessehen/PhpstormProjects/lifecoach-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import $axios from \"../axios-instance\";\nvar state = {\n  token: localStorage.getItem('access_token') || null\n};\nvar getters = {\n  loggedIn: function loggedIn(state) {\n    return state.token !== null;\n  }\n};\nvar actions = {\n  retrieveToken: function retrieveToken(context, credentials) {\n    return new Promise(function (resolve, reject) {\n      $axios.post('/login', {\n        email: credentials.email,\n        password: credentials.password\n      }).then(function (response) {\n        var token = response.data.access_token;\n        localStorage.setItem('access_token', token);\n        context.commit('retrieveToken', token);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  destroyToken: function destroyToken(context) {\n    if (context.getters.loggedIn()) {\n      return new Promise(function (resolve, reject) {\n        $axios.post('logout').then(function (response) {\n          localStorage.removeItem('access_token');\n          context.commit('destroyToken');\n          resolve(response);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    }\n  }\n};\nvar mutations = {\n  retrieveToken: function retrieveToken(state, token) {\n    state.token = token;\n  },\n  destroyToken: function destroyToken(state) {\n    state.token = null;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/jessehen/PhpstormProjects/lifecoach-frontend/src/store/modules/auth.js"],"names":["$axios","state","token","localStorage","getItem","getters","loggedIn","actions","retrieveToken","context","credentials","Promise","resolve","reject","post","email","password","then","response","data","access_token","setItem","commit","catch","error","destroyToken","removeItem","mutations","namespaced"],"mappings":"AAAA,OAAOA,MAAP;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,cAArB,KAAwC;AADrC,CAAd;AAIA,IAAMC,OAAO,GAAG;AACZC,EAAAA,QADY,oBACHL,KADG,EACI;AACZ,WAAOA,KAAK,CAACC,KAAN,KAAgB,IAAvB;AACH;AAHW,CAAhB;AAMA,IAAMK,OAAO,GAAG;AACZC,EAAAA,aADY,yBACEC,OADF,EACWC,WADX,EACwB;AAChC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCb,MAAAA,MAAM,CAACc,IAAP,CAAY,QAAZ,EAAsB;AAClBC,QAAAA,KAAK,EAAEL,WAAW,CAACK,KADD;AAElBC,QAAAA,QAAQ,EAAEN,WAAW,CAACM;AAFJ,OAAtB,EAGGC,IAHH,CAGQ,UAAAC,QAAQ,EAAI;AAChB,YAAMhB,KAAK,GAAGgB,QAAQ,CAACC,IAAT,CAAcC,YAA5B;AAEAjB,QAAAA,YAAY,CAACkB,OAAb,CAAqB,cAArB,EAAqCnB,KAArC;AACAO,QAAAA,OAAO,CAACa,MAAR,CAAe,eAAf,EAAgCpB,KAAhC;AAEAU,QAAAA,OAAO,CAACM,QAAD,CAAP;AACH,OAVD,EAUGK,KAVH,CAUS,UAAAC,KAAK,EAAI;AACdX,QAAAA,MAAM,CAACW,KAAD,CAAN;AACH,OAZD;AAaH,KAdM,CAAP;AAeH,GAjBW;AAkBZC,EAAAA,YAlBY,wBAkBChB,OAlBD,EAkBU;AAClB,QAAIA,OAAO,CAACJ,OAAR,CAAgBC,QAAhB,EAAJ,EAAgC;AAC5B,aAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCb,QAAAA,MAAM,CAACc,IAAP,CAAY,QAAZ,EAAsBG,IAAtB,CAA2B,UAAAC,QAAQ,EAAI;AACnCf,UAAAA,YAAY,CAACuB,UAAb,CAAwB,cAAxB;AACAjB,UAAAA,OAAO,CAACa,MAAR,CAAe,cAAf;AAEAV,UAAAA,OAAO,CAACM,QAAD,CAAP;AACH,SALD,EAKGK,KALH,CAKS,UAAAC,KAAK,EAAI;AACdX,UAAAA,MAAM,CAACW,KAAD,CAAN;AACH,SAPD;AAQH,OATM,CAAP;AAUH;AACJ;AA/BW,CAAhB;AAkCA,IAAMG,SAAS,GAAG;AACdnB,EAAAA,aADc,yBACAP,KADA,EACOC,KADP,EACc;AACxBD,IAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACH,GAHa;AAIduB,EAAAA,YAJc,wBAIDxB,KAJC,EAIK;AACfA,IAAAA,KAAK,CAACC,KAAN,GAAc,IAAd;AACH;AANa,CAAlB;AASA,eAAe;AACX0B,EAAAA,UAAU,EAAE,IADD;AAEX3B,EAAAA,KAAK,EAALA,KAFW;AAGXI,EAAAA,OAAO,EAAPA,OAHW;AAIXE,EAAAA,OAAO,EAAPA,OAJW;AAKXoB,EAAAA,SAAS,EAATA;AALW,CAAf","sourcesContent":["import $axios from \"../axios-instance\";\n\nconst state = {\n    token: localStorage.getItem('access_token') || null,\n};\n\nconst getters = {\n    loggedIn(state) {\n        return state.token !== null\n    },\n};\n\nconst actions = {\n    retrieveToken(context, credentials) {\n        return new Promise((resolve, reject) => {\n            $axios.post('/login', {\n                email: credentials.email,\n                password: credentials.password\n            }).then(response => {\n                const token = response.data.access_token;\n\n                localStorage.setItem('access_token', token);\n                context.commit('retrieveToken', token);\n\n                resolve(response);\n            }).catch(error => {\n                reject(error);\n            })\n        })\n    },\n    destroyToken(context) {\n        if (context.getters.loggedIn()) {\n            return new Promise((resolve, reject) => {\n                $axios.post('logout').then(response => {\n                    localStorage.removeItem('access_token');\n                    context.commit('destroyToken');\n\n                    resolve(response);\n                }).catch(error => {\n                    reject(error);\n                })\n            })\n        }\n    }\n};\n\nconst mutations = {\n    retrieveToken(state, token) {\n        state.token = token;\n    },\n    destroyToken(state){\n        state.token = null;\n    }\n};\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n}\n"]}]}